server:
  port: 8080

logging:
  level:
    root: WARN
    org:
      springframework:
        transaction: TRACE

spring:
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
          auto-create-topics: true
          auto-add-partitions: true
          consumer-properties:
            max.poll.records: 200
            min.fetch.bytes: 5000
            fetch.max.wait.ms: 100
#            interceptor.classes: io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor
      bindings:
        likesConsumer-in-0:
          destination: ru.jpoint.likes
          group: likes-consumer-group
          consumer:
            maxAttempts: 1
            backOffInitialInterval: 1000
#            batch-mode: true
            concurrency: 5
        likesProducer-out-0:
          destination: ru.jpoint.likes
  jpa:
    open-in-view: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        ddl-auto: none
#        show_sql: true
#        format_sql: true
  datasource:
    hikari:
      transaction-isolation: TRANSACTION_READ_COMMITTED # TRANSACTION_READ_UNCOMMITTED / TRANSACTION_READ_COMMITTED / TRANSACTION_REPEATABLE_READ / TRANSACTION_SERIALIZABLE
    url: jdbc:postgresql://localhost:5432/database?currentSchema=jpoint
    username: postgres
    password: password
  redis:
    database: 0
    host: localhost
    port: 6379
    timeout: 500ms


